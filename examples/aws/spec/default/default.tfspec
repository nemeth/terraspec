mock "aws_vpcs" "selected" {
  tags = {
    service = "secure"
  }
  return {
    ids = ["12345"]
  }
}

mock "aws_subnet_ids" "secure" {
  vpc_id = "12345"

  tags = {
    Tier = "Private"
  }

  return {
    ids = ["mocked_subnet_id"]
  }
}

mock "terraform_remote_state" "vpc"{
  backend = "s3"
  config = {
     bucket = "mybucket"
     key    = "path/to/my/key"
     region = "us-east-1"
  }
  return {
    outputs = {
      security_groups = ["123"]
    }
  }
}

assert "module.ec2-instance.aws_instance" "this[0]" {
      associate_public_ip_address  = false
      disable_api_termination      = false
      ebs_optimized                = false
      get_password_data            = false
      instance_type                = "t2.small"
      monitoring                   = false
      source_dest_check            = true
      subnet_id                    = "mocked_subnet_id"
      tags                         = {
                                        "Name" = "my-instance"
                                        }
      tenancy                      = "default"
      volume_tags                  = {
                                        "Name" = "my-instance"
                                        }
      credit_specification {
        cpu_credits = "standard"
      }

      vpc_security_group_ids = ["123"]
}

refute "module.ec2-instance.aws_instance" "this[0]" {
  // TODO
  ebs_block_device{}
}


expect "aws_s3_bucket" "b" {
  bucket = "my-tf-test-bucket"
  return {
    id = "arn:aws:s3::0000000000:my-tf-test-bucket"
  }
}

assert "aws_s3_bucket" "b" {
    id = "arn:aws:s3::0000000000:my-tf-test-bucket"
}
